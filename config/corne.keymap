/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/bt.h>

#define ___ &trans

/ {
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <40>;
            key-positions = <12 13>;
            bindings = <&mt LG(LSHFT) ESC>;
        };
        combo_tab {
            timeout-ms = <40>;
            key-positions = <22 23>;
            bindings = <&kp TAB>;
        };
        combo_ret {
            timeout-ms = <40>;
            key-positions = <26 27>;
            bindings = <&mt LG(LSHFT) RET>;
        };
    };
};

//         empty {
//             bindings = <
// 0                1                2                3                4                5                6                7                8                9
// 10               11               12               13               14               15               16               17               18               19
// 20               21               22               23               24               25               26               27               28               29
//                                                    30               31               32               33               34               35                
//             >;
//         };

/ {
    chosen {
        zmk,physical-layout = &foostan_corne_5col_layout;
    };

    behaviors {
        // left mod-tap
        lmt: lmt {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34 35>;
            hold-trigger-on-release;
        };

        // right mod-tap
        rmt: rmt {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32>;
            hold-trigger-on-release;
        };

        // layer-tap with quick tap
        ltqt: ltqt {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            bindings = <&mo>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base { // 0
            bindings = <
&kp Q            &kp W            &kp E            &kp R            &kp T            &kp Y            &kp U            &kp I            &kp O            &kp P
&lmt LALT A      &lmt LCTRL S     &lmt LGUI D      &lmt LSHFT F     &kp G            &kp H            &rmt LSHFT J     &rmt LGUI K      &rmt LCTRL L     &rmt LALT SQT
&ltqt 5 Z        &kp X            &kp C            &kp V            &kp B            &kp N            &kp M            &kp COMMA        &kp DOT          &kp FSLH      
                                  &mo 6            &ltqt 2 SPACE    &mo 3            &kp LSHFT        &ltqt 1 BSPC     &mo 4         
            >;
        };

        num { // 1
            bindings = <
___              &kp N7           &kp N8           &kp N9           ___              ___              ___              ___              ___              ___
___              &kp N4           &kp N5           &kp N6           ___              ___              ___              ___              ___              ___
___              &kp N1           &kp N2           &kp N3           ___              ___              ___              ___              ___              ___
                                  ___              &kp N0           ___              ___              ___              ___              
            >;
        };

        nav { // 2
            bindings = <
___              ___              ___              ___              ___              ___              ___              ___              ___              ___
___              ___              ___              ___              ___              &kp LEFT         &kp DOWN         &kp UP           &kp RIGHT        ___
___              ___              ___              ___              ___              &kp HOME         &kp PG_DN        &kp PG_UP        &kp END          ___
                                  ___              ___              ___              ___              ___              ___              
            >;
        };

        sym { // 3
            bindings = <
&kp EXCL         &kp AT           &kp HASH         &kp DLLR         ___              ___              &kp GRAVE        &kp LPAR         &kp RPAR         &kp PRCNT
&lmt LALT TILDE  &lmt LCTRL CARET &lmt LGUI EQUAL  &lmt LSHFT MINUS ___              ___              &rmt LSHFT COLON &rmt LGUI LBKT   &rmt LCTRL RBKT  &rmt LALT SEMI
&kp PIPE         &kp AMPS         &kp STAR         &kp PLUS         ___              ___              &kp UNDER        &kp LBRC         &kp RBRC         &kp BSLH
                                  ___              ___              ___              ___              ___              ___              
            >;
        };

        fun { // 4
            bindings = <
&kp F12          &kp F7           &kp F8           &kp F9           ___              ___              ___              ___              ___              ___              
&kp F11          &kp F4           &kp F5           &kp F6           ___              ___              ___              ___              ___              ___              
&kp F10          &kp F1           &kp F2           &kp F3           ___              ___              ___              ___              ___              ___              
                                  ___              ___              ___              ___              ___              ___              
            >;
        };

        med { // 5
            bindings = <
___              ___              ___              ___              ___              ___              ___              ___              ___              ___              
___              ___              ___              ___              ___              &kp C_PREV       &kp C_VOL_DN     &kp C_VOL_UP     &kp C_NEXT       ___              
___              ___              ___              ___              ___              &kp C_PP         &kp C_BRI_DN     &kp C_BRI_UP     &kp C_MUTE       ___              
                                  ___              ___              ___              ___              ___              ___              
            >;
        };

        mouse { // 6
            bindings = <
___              ___              ___              ___              ___              ___              ___              ___              ___              ___              
___              ___              ___              ___              ___              &mmv MOVE_LEFT   &mmv MOVE_DOWN   &mmv MOVE_UP     &mmv MOVE_RIGHT  ___              
___              ___              ___              ___              ___              &msc SCRL_LEFT   &msc SCRL_UP     &msc SCRL_DOWN   &msc SCRL_RIGHT  ___              
                                  ___              ___              ___              &mkp RCLK        &mkp LCLK        &mkp MCLK
            >;
        };

        // 17 characters for each key works for my macbook screen
        empty { // 7
            bindings = <
___              ___              ___              ___              ___              ___              ___              ___              ___              ___              
___              ___              ___              ___              ___              ___              ___              ___              ___              ___              
___              ___              ___              ___              ___              ___              ___              ___              ___              ___              
                                  ___              ___              ___              ___              ___              ___              
            >;
        };
    };
};
