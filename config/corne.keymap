/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define ___ &trans

#define MEH LA(LC(LSHFT))
#define HYPER LA(LC(LG(LSHFT)))
#define RAY LA(LC(LGUI))
#define APP LA(LG(LSHFT))

#define LAUNCHPAD LA(LC(LG(LS(F3))))
#define SPOTLIGHT LA(LC(LG(LS(F4))))
#define DICTATION LA(LC(LG(LS(F5))))
#define DO_NOT_DISTURB LA(LC(LG(LS(F6))))

#define BSPC_WORD LA(BSPC)
#define SUPERKEY LA(LG(SPACE))
// homerow scroll
#define HRS LA(ESC)
// homerow hints
#define HRH LA(SPACE)
// homerow find
#define HRF LA(FSLH)
// mouseless
#define MOUSE LA(M)

/ {
    behaviors {
        // left mod-tap
        lmt: lmt {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
            hold-trigger-on-release;
        };

        // right mod-tap
        rmt: rmt {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
            hold-trigger-on-release;
        };

        // left mod-tap require prior idle
        lmti: lmti {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <125>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
            hold-trigger-on-release;
        };

        // right mod-tap require prior idle
        rmti: rmti {
            compatible = "zmk,behavior-hold-tap";
            label = "RHHR_RPI";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <125>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
            hold-trigger-on-release;
        };

        // left layer-tap
        llt: llt {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
            hold-trigger-on-release;
        };

        // right layer-tap
        rlt: rlt {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
            hold-trigger-on-release;
        };

        // left layer-tap require prior idle
        llti: llti {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <125>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
            hold-trigger-on-release;
        };

        // right layer-tap require prior idle
        rlti: rlti {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <125>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
            hold-trigger-on-release;
        };

        // layer-tap with quick tap
        ltqt: ltqt {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            bindings = <&mo>, <&kp>;
        };

        // layer-tap (no quick tap)
        lt: lt {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp TAB          &kp Q            &kp W            &ltqt 4 E        &kp R            &kp T            &kp Y            &kp U            &ltqt 5 I        &kp O            &kp P            &kp BSPC
&kp ESC          &lmti LALT A     &lmti LCTRL S    &lmti LGUI D     &lmt LSHFT F     &kp G            &kp H            &rmt LSHFT J     &rmti LGUI K     &rmti LCTRL L    &rmti LALT SQT   &kp RET
___              &lmti RAY Z      &kp X            &lmti APP C      &lmti MEH V      &kp B            &kp N            &rmti MEH M      &rmti APP COMMA  &kp DOT          &rmti RAY FSLH   ___
                                                   &ltqt 6 ESC      &ltqt 2 SPACE    ___              ___              &ltqt 1 BSPC     &ltqt 5 RET
            >;
        };

        num {
            bindings = <
___              ___              &kp N7           &kp N8           &kp N9           ___              ___              ___              ___              ___              ___              ___              
___              ___              &kp N4           &kp N5           &kp N6           ___              ___              ___              ___              ___              ___              ___              
___              ___              &kp N1           &kp N2           &kp N3           ___              ___              ___              ___              ___              ___              ___              
                                                   ___              &kp N0           ___              ___              ___              ___              
            >;
        };

        nav {
            bindings = <
___              ___              ___              &kp SUPERKEY     ___              ___              ___              &kp BSPC_WORD    &caps_word       &kp CAPS         ___              ___              
___              ___              &lmt LALT HRF    &lmt LGUI HRS    &lmt LSHFT HRH   ___              &kp LEFT         &kp DOWN         &kp UP           &kp RIGHT        ___              ___              
___              ___              ___              ___              &lmt MEH MOUSE   ___              &kp HOME         &kp PG_DN        &kp PG_UP        &kp END          ___              ___              
                                                   ___              ___              ___              ___              &kp TAB          &kp DEL          
            >;
        };

        lsym {
            bindings = <
___              &kp EXCL         &kp AT           &kp HASH         &kp DLLR         ___              ___              ___              ___              ___              ___              ___              
___              &kp TILDE        &kp CARET        &kp EQUAL        &kp MINUS        ___              ___              ___              ___              ___              ___              ___              
___              &kp PIPE         &kp AMPS         &kp STAR         &kp PLUS         ___              ___              ___              ___              ___              ___              ___              
                                                   ___              ___              ___              ___              ___              ___              
            >;
        };

        rsym {
            bindings = <
___              ___              ___              ___              ___              ___              ___              &kp GRAVE        &kp LPAR         &kp RPAR         &kp PRCNT        ___              
___              ___              ___              ___              ___              ___              ___              &kp COLON        &kp LBKT         &kp RBKT         &kp SEMI         ___              
___              ___              ___              ___              ___              ___              ___              &kp UNDER        &kp LBRC         &kp RBRC         &kp BSLH         ___              
                                                   ___              ___              ___              ___              ___              ___              
            >;
        };

        fun {
            bindings = <
___              &kp F12          &kp F7           &kp F8           &kp F9           ___              ___              ___              ___              ___              ___              ___              
___              &kp F11          &kp F4           &kp F5           &kp F6           ___              ___              ___              ___              ___              ___              ___              
___              &kp F10          &kp F1           &kp F2           &kp F3           ___              ___              ___              ___              ___              ___              ___              
                                                   ___              ___              ___              ___              ___              ___              
            >;
        };

        med {
            bindings = <
___              ___              ___              ___              ___              ___              ___              ___              ___              ___              ___              ___              
___              ___              ___              ___              ___              ___              &kp C_PREV       &kp C_VOL_DN     &kp C_VOL_UP     &kp C_NEXT       ___              ___              
___              ___              ___              ___              ___              ___              &kp C_PP         &kp C_BRI_DN     &kp C_BRI_UP     &kp C_MUTE       ___              ___              
                                                   ___              ___              ___              ___              ___              ___              
            >;
        };

        // 17 characters for each key works for my macbook screen
        empty {
            bindings = <
___              ___              ___              ___              ___              ___              ___              ___              ___              ___              ___              ___              
___              ___              ___              ___              ___              ___              ___              ___              ___              ___              ___              ___              
___              ___              ___              ___              ___              ___              ___              ___              ___              ___              ___              ___              
                                                   ___              ___              ___              ___              ___              ___              
            >;
        };
    };
};
