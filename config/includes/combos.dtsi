// use require-prior-idle-ms for combos
#undef COMBO_HOOK
#define COMBO_HOOK require-prior-idle-ms = <125>;

#define COMBO_TERM_FAST 60
#define COMBO_TERM_SLOW 60

// make homerow combos tap-only (so HRMs can be chorded instantaneously)
#define HRC_ESC    &hml         LA(LGUI) ESC
#define HRC_RET    &hml         LS(LGUI) RET
#define HRC_RBRC   &hmr         RS(LGUI) RBRC

ZMK_COMBO(esc,   HRC_ESC,       LM2 LM3,     ALL, COMBO_TERM_FAST)
ZMK_COMBO(enter, HRC_RET,       LM1 LM2,     ALL, COMBO_TERM_FAST)
ZMK_COMBO(left,  &kp LEFT,      LB3 LB4,     ALL, COMBO_TERM_FAST)
ZMK_COMBO(up,    &kp UP,        LB2 LB3,     ALL, COMBO_TERM_FAST)
ZMK_COMBO(down,  &kp DOWN,      LB1 LB2,     ALL, COMBO_TERM_FAST)
ZMK_COMBO(right, &kp RIGHT,     LB0 LB1,     ALL, COMBO_TERM_FAST)

ZMK_COMBO(lpar,  &kp LPAR,      RT0 RT1,     ALL, COMBO_TERM_FAST)
ZMK_COMBO(rpar,  &kp RPAR,      RT1 RT2,     ALL, COMBO_TERM_FAST)
ZMK_COMBO(lbrc,  &kp LBRC,      RM0 RM1,     ALL, COMBO_TERM_FAST)
ZMK_COMBO(rbrc,  HRC_RBRC,      RM1 RM2,     ALL, COMBO_TERM_FAST)
ZMK_COMBO(lbkt,  &kp LBKT,      RB0 RB1,     ALL, COMBO_TERM_FAST)
ZMK_COMBO(rbkt,  &kp RBKT,      RB0 RB1,     ALL, COMBO_TERM_FAST)
ZMK_COMBO(lt,    &kp LT,        RT1 RM0,     ALL, COMBO_TERM_FAST)
ZMK_COMBO(gt,    &kp GT,        RT1 RM2,     ALL, COMBO_TERM_FAST)

// number row
// ZMK_COMBO(excl,  &kp EXCL,      LB4 LM4,     ALL, COMBO_TERM_SLOW)
ZMK_COMBO(at,    &kp AT,        LB3 LM3,     ALL, COMBO_TERM_SLOW)
ZMK_COMBO(hash,  &kp HASH,      LB2 LM2,     ALL, COMBO_TERM_SLOW)
ZMK_COMBO(dllr,  &kp DLLR,      LB1 LM1,     ALL, COMBO_TERM_SLOW)
ZMK_COMBO(prcnt, &kp PRCNT,     LB0 LM0,     ALL, COMBO_TERM_SLOW)
ZMK_COMBO(caret, &kp CARET,     RB0 RM0,     ALL, COMBO_TERM_SLOW)
ZMK_COMBO(amps,  &kp AMPS,      RB1 RM1,     ALL, COMBO_TERM_SLOW)
ZMK_COMBO(star,  &kp STAR,      RB2 RM2,     ALL, COMBO_TERM_SLOW)

ZMK_COMBO(grave, &kp GRAVE,     LM2 LT2,     ALL, COMBO_TERM_SLOW)
ZMK_COMBO(tilde, &kp TILDE,     LM3 LT3,     ALL, COMBO_TERM_SLOW)
ZMK_COMBO(bslh,  &kp BSLH,      LM1 LT1,     ALL, COMBO_TERM_SLOW)
ZMK_COMBO(pipe,  &kp PIPE,      LM0 LT0,     ALL, COMBO_TERM_SLOW)

ZMK_COMBO(under, &kp UNDER,     RM0 RT0,     ALL, COMBO_TERM_SLOW)
ZMK_COMBO(minus, &kp MINUS,     RM1 RT1,     ALL, COMBO_TERM_SLOW)
ZMK_COMBO(equal, &kp EQUAL,     RM2 RT2,     ALL, COMBO_TERM_SLOW)
ZMK_COMBO(plus,  &kp PLUS,      RM3 RT3,     ALL, COMBO_TERM_SLOW)
ZMK_COMBO(slash, &kp SLASH,     RT3 RT4,     ALL, COMBO_TERM_SLOW)

// make homerow combos tap-only (so HRMs can be chorded instantaneously)
// #define HRC_TAB    &hml         LA(LCTRL) TAB
// #define HRC_REPEAT &hml_repeat  LS(LCTRL) 0
// #define HRC_LPAR   &hmr_lpar_lt RS(LCTRL) 0
// #define HRC_RPAR   &hmr_rpar_gt LA(LCTRL) 0

/* Horizontal combos - left hand */
// ZMK_COMBO(esc,   &kp ESC,       LT3 LT2,     ALL, COMBO_TERM_FAST)
// ZMK_COMBO(ret,   &kp RETURN,    LT2 LT1,     ALL, COMBO_TERM_FAST)
// ZMK_COMBO(mouse, &smart_mouse,  LT3 LT1,     ALL, COMBO_TERM_FAST)

// ZMK_COMBO(tab,   HRC_TAB,       LM3 LM2,     ALL, COMBO_TERM_FAST)
// ZMK_COMBO(repeat,HRC_REPEAT,    LM2 LM1,     ALL, COMBO_TERM_FAST)

// ZMK_COMBO(cut,   &kp LC(X),     LB3 LB1,     ALL, COMBO_TERM_FAST)
// ZMK_COMBO(copy,  &kp LC(INS),   LB3 LB2,     ALL, COMBO_TERM_FAST)
// ZMK_COMBO(paste, &kp LS(INS),   LB2 LB1,     ALL, COMBO_TERM_FAST)

/* Horizontal combos - right hand */
// ZMK_COMBO(bspc,  &kp BSPC,      RT1 RT2,     ALL, COMBO_TERM_FAST)
// ZMK_COMBO(del,   &kp DEL,       RT2 RT3,     ALL, COMBO_TERM_FAST)


// ZMK_COMBO(grk,   &sl UC,        RT1 RT3,     ALL, COMBO_TERM_FAST)
// ZMK_COMBO(cpgrk, &sls 0,        RT1 RT2 RT3, ALL, COMBO_TERM_FAST)

/* Vertical combos - left hand */

// ZMK_COMBO(grave, &kp GRAVE,     LM3 LB3,     ALL, COMBO_TERM_SLOW)
// ZMK_COMBO(bslh,  &kp BSLH,      LM2 LB2,     ALL, COMBO_TERM_SLOW)
// ZMK_COMBO(equal, &kp EQUAL,     LM1 LB1,     ALL, COMBO_TERM_SLOW)
// ZMK_COMBO(tilde, &kp TILDE,     LM0 LB0,     ALL, COMBO_TERM_SLOW)

/* Vertical combos - right hand */

// ZMK_COMBO(under, &kp UNDER,     RM0 RB0,     ALL, COMBO_TERM_SLOW)
// ZMK_COMBO(minus, &kp MINUS,     RM1 RB1,     ALL, COMBO_TERM_SLOW)
// ZMK_COMBO(fslh,  &kp FSLH,      RM2 RB2,     ALL, COMBO_TERM_SLOW)
// ZMK_COMBO(pipe,  &kp PIPE,      RM3 RB3,     ALL, COMBO_TERM_SLOW)
// ZMK_COMBO(plus,  &kp PLUS,      RT1 RM1,     ALL, COMBO_TERM_SLOW)

/* vim: set ft=c tw=174: */
